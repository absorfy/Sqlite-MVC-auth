@model IEnumerable<MyMVCAppAuth.Models.HeroViewModel>

<h1>Index</h1>

@if (User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
    <tr>
        <th>@Html.DisplayNameFor(model => model.Name)</th>
        <th>@Html.DisplayNameFor(model => model.ImageUrl)</th>
        <th>@Html.DisplayNameFor(model => model.ClassId)</th>
        <th>@Html.DisplayNameFor(model => model.SkillIds)</th>
        <th>Дії</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var hero in Model) {
        <tr>
            <td>@Html.DisplayFor(modelItem => hero.Name)</td>
            <td>
                @await Html.PartialAsync("_HeroAvatar", hero)
            </td>
            <td>
                @await Html.PartialAsync("_DisplayHeroClass", hero)
            </td>
            <td>
                @await Html.PartialAsync("_DisplayHeroSkills", hero)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@hero.Id">Details</a>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-action="Edit" asp-route-id="@hero.Id">Edit</a>
                    <a asp-action="Delete" asp-route-id="@hero.Id">Delete</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>

@{
    var pagination = ViewBag.Pagination as MyMVCAppAuth.Models.PaginateViewModel;
}

@if (pagination is { TotalPages: >= 1 })
{
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (pagination.Page > 0)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-Page="@(pagination.Page - 1)"
                       asp-route-PageSize="@pagination.PageSize"
                       asp-route-OrderBy="@pagination.OrderBy"
                       asp-route-IsAscending="@pagination.IsAscending">« Попередня</a>
                </li>
            }

            @for (int i = 0; i < pagination.TotalPages; i++)
            {
                <li class="page-item @(i == pagination.Page ? "active" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-Page="@i"
                       asp-route-PageSize="@pagination.PageSize"
                       asp-route-OrderBy="@pagination.OrderBy"
                       asp-route-IsAscending="@pagination.IsAscending">@(i + 1)</a>
                </li>
            }

            @if (pagination.Page < pagination.TotalPages - 1)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-Page="@(pagination.Page + 1)"
                       asp-route-PageSize="@pagination.PageSize"
                       asp-route-OrderBy="@pagination.OrderBy"
                       asp-route-IsAscending="@pagination.IsAscending">Наступна »</a>
                </li>
            }
        </ul>
    </nav>
}
